# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: blockfish.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x0f\x62lockfish.proto\x12\tblockfish\"5\n\x08Snapshot\x12\x0c\n\x04hold\x18\x01 \x01(\t\x12\r\n\x05queue\x18\x02 \x01(\t\x12\x0c\n\x04rows\x18\x03 \x03(\t\"B\n\nSuggestion\x12\x0e\n\x06rating\x18\x01 \x01(\x12\x12$\n\x06inputs\x18\x02 \x03(\x0e\x32\x10.blockfish.InputB\x02\x10\x01\"E\n\x05Stats\x12\r\n\x05nodes\x18\x01 \x01(\x04\x12\x12\n\niterations\x18\x02 \x01(\x04\x12\x19\n\x11time_taken_millis\x18\x03 \x01(\x04\"\xf8\x02\n\x07Request\x12/\n\nset_config\x18\x01 \x01(\x0b\x32\x19.blockfish.Request.ConfigH\x00\x12\x31\n\x0bset_ruleset\x18\x02 \x01(\x0b\x32\x1a.blockfish.Request.RulesetH\x00\x12-\n\x07\x61nalyze\x18\x03 \x01(\x0b\x32\x1a.blockfish.Request.AnalyzeH\x00\x1aI\n\x06\x43onfig\x12\x12\n\nnode_limit\x18\x01 \x01(\r\x12\x13\n\x0bmax_results\x18\x03 \x01(\r\x12\x16\n\x0emax_placements\x18\x04 \x01(\r\x1aJ\n\x07Ruleset\x12-\n\x03srs\x18\x01 \x01(\x0b\x32\x1e.blockfish.Request.Ruleset.SRSH\x00\x1a\x05\n\x03SRSB\t\n\x07ruleset\x1a<\n\x07\x41nalyze\x12\n\n\x02id\x18\x01 \x01(\x03\x12%\n\x08snapshot\x18\x02 \x01(\x0b\x32\x13.blockfish.SnapshotB\x05\n\x03req\"\x85\x02\n\x08Response\x12\x30\n\x08greeting\x18\x01 \x01(\x0b\x32\x1c.blockfish.Response.GreetingH\x00\x12\x30\n\x08\x66inished\x18\x02 \x01(\x0b\x32\x1c.blockfish.Response.AnalysisH\x00\x1a)\n\x08Greeting\x12\x0f\n\x07version\x18\x01 \x01(\t\x12\x0c\n\x04motd\x18\x02 \x01(\t\x1a\x63\n\x08\x41nalysis\x12\n\n\x02id\x18\x01 \x01(\x03\x12\x1f\n\x05stats\x18\x02 \x01(\x0b\x32\x10.blockfish.Stats\x12*\n\x0bsuggestions\x18\x03 \x03(\x0b\x32\x15.blockfish.SuggestionB\x05\n\x03res*G\n\x05Input\x12\x08\n\x04LEFT\x10\x00\x12\t\n\x05RIGHT\x10\x01\x12\x06\n\x02\x43W\x10\x02\x12\x07\n\x03\x43\x43W\x10\x03\x12\x08\n\x04HOLD\x10\x04\x12\x06\n\x02SD\x10\x05\x12\x06\n\x02HD\x10\x06\x62\x06proto3')

_INPUT = DESCRIPTOR.enum_types_by_name['Input']
Input = enum_type_wrapper.EnumTypeWrapper(_INPUT)
LEFT = 0
RIGHT = 1
CW = 2
CCW = 3
HOLD = 4
SD = 5
HD = 6


_SNAPSHOT = DESCRIPTOR.message_types_by_name['Snapshot']
_SUGGESTION = DESCRIPTOR.message_types_by_name['Suggestion']
_STATS = DESCRIPTOR.message_types_by_name['Stats']
_REQUEST = DESCRIPTOR.message_types_by_name['Request']
_REQUEST_CONFIG = _REQUEST.nested_types_by_name['Config']
_REQUEST_RULESET = _REQUEST.nested_types_by_name['Ruleset']
_REQUEST_RULESET_SRS = _REQUEST_RULESET.nested_types_by_name['SRS']
_REQUEST_ANALYZE = _REQUEST.nested_types_by_name['Analyze']
_RESPONSE = DESCRIPTOR.message_types_by_name['Response']
_RESPONSE_GREETING = _RESPONSE.nested_types_by_name['Greeting']
_RESPONSE_ANALYSIS = _RESPONSE.nested_types_by_name['Analysis']
Snapshot = _reflection.GeneratedProtocolMessageType('Snapshot', (_message.Message,), {
  'DESCRIPTOR' : _SNAPSHOT,
  '__module__' : 'blockfish_pb2'
  # @@protoc_insertion_point(class_scope:blockfish.Snapshot)
  })
_sym_db.RegisterMessage(Snapshot)

Suggestion = _reflection.GeneratedProtocolMessageType('Suggestion', (_message.Message,), {
  'DESCRIPTOR' : _SUGGESTION,
  '__module__' : 'blockfish_pb2'
  # @@protoc_insertion_point(class_scope:blockfish.Suggestion)
  })
_sym_db.RegisterMessage(Suggestion)

Stats = _reflection.GeneratedProtocolMessageType('Stats', (_message.Message,), {
  'DESCRIPTOR' : _STATS,
  '__module__' : 'blockfish_pb2'
  # @@protoc_insertion_point(class_scope:blockfish.Stats)
  })
_sym_db.RegisterMessage(Stats)

Request = _reflection.GeneratedProtocolMessageType('Request', (_message.Message,), {

  'Config' : _reflection.GeneratedProtocolMessageType('Config', (_message.Message,), {
    'DESCRIPTOR' : _REQUEST_CONFIG,
    '__module__' : 'blockfish_pb2'
    # @@protoc_insertion_point(class_scope:blockfish.Request.Config)
    })
  ,

  'Ruleset' : _reflection.GeneratedProtocolMessageType('Ruleset', (_message.Message,), {

    'SRS' : _reflection.GeneratedProtocolMessageType('SRS', (_message.Message,), {
      'DESCRIPTOR' : _REQUEST_RULESET_SRS,
      '__module__' : 'blockfish_pb2'
      # @@protoc_insertion_point(class_scope:blockfish.Request.Ruleset.SRS)
      })
    ,
    'DESCRIPTOR' : _REQUEST_RULESET,
    '__module__' : 'blockfish_pb2'
    # @@protoc_insertion_point(class_scope:blockfish.Request.Ruleset)
    })
  ,

  'Analyze' : _reflection.GeneratedProtocolMessageType('Analyze', (_message.Message,), {
    'DESCRIPTOR' : _REQUEST_ANALYZE,
    '__module__' : 'blockfish_pb2'
    # @@protoc_insertion_point(class_scope:blockfish.Request.Analyze)
    })
  ,
  'DESCRIPTOR' : _REQUEST,
  '__module__' : 'blockfish_pb2'
  # @@protoc_insertion_point(class_scope:blockfish.Request)
  })
_sym_db.RegisterMessage(Request)
_sym_db.RegisterMessage(Request.Config)
_sym_db.RegisterMessage(Request.Ruleset)
_sym_db.RegisterMessage(Request.Ruleset.SRS)
_sym_db.RegisterMessage(Request.Analyze)

Response = _reflection.GeneratedProtocolMessageType('Response', (_message.Message,), {

  'Greeting' : _reflection.GeneratedProtocolMessageType('Greeting', (_message.Message,), {
    'DESCRIPTOR' : _RESPONSE_GREETING,
    '__module__' : 'blockfish_pb2'
    # @@protoc_insertion_point(class_scope:blockfish.Response.Greeting)
    })
  ,

  'Analysis' : _reflection.GeneratedProtocolMessageType('Analysis', (_message.Message,), {
    'DESCRIPTOR' : _RESPONSE_ANALYSIS,
    '__module__' : 'blockfish_pb2'
    # @@protoc_insertion_point(class_scope:blockfish.Response.Analysis)
    })
  ,
  'DESCRIPTOR' : _RESPONSE,
  '__module__' : 'blockfish_pb2'
  # @@protoc_insertion_point(class_scope:blockfish.Response)
  })
_sym_db.RegisterMessage(Response)
_sym_db.RegisterMessage(Response.Greeting)
_sym_db.RegisterMessage(Response.Analysis)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _SUGGESTION.fields_by_name['inputs']._options = None
  _SUGGESTION.fields_by_name['inputs']._serialized_options = b'\020\001'
  _INPUT._serialized_start=867
  _INPUT._serialized_end=938
  _SNAPSHOT._serialized_start=30
  _SNAPSHOT._serialized_end=83
  _SUGGESTION._serialized_start=85
  _SUGGESTION._serialized_end=151
  _STATS._serialized_start=153
  _STATS._serialized_end=222
  _REQUEST._serialized_start=225
  _REQUEST._serialized_end=601
  _REQUEST_CONFIG._serialized_start=383
  _REQUEST_CONFIG._serialized_end=456
  _REQUEST_RULESET._serialized_start=458
  _REQUEST_RULESET._serialized_end=532
  _REQUEST_RULESET_SRS._serialized_start=516
  _REQUEST_RULESET_SRS._serialized_end=521
  _REQUEST_ANALYZE._serialized_start=534
  _REQUEST_ANALYZE._serialized_end=594
  _RESPONSE._serialized_start=604
  _RESPONSE._serialized_end=865
  _RESPONSE_GREETING._serialized_start=716
  _RESPONSE_GREETING._serialized_end=757
  _RESPONSE_ANALYSIS._serialized_start=759
  _RESPONSE_ANALYSIS._serialized_end=858
# @@protoc_insertion_point(module_scope)
